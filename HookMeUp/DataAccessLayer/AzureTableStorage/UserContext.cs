//------------------------------------------------------------------------------
// <autogenerated>
//    This code was generated by a CodeSmith Template.
//
//    This is for customizing generated code
//    All changes made in this file will be preserved.
// </autogenerated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Microsoft.WindowsAzure.StorageClient;
using System.Globalization;
using System.IO;
using System.Data.Services.Client;

namespace SS.DL.AzureTableStorage
{
    public partial class  UserContext 
    {
    /* 
	
	//   This is an example of custom developed query
	public List<User> MethodName(list of method parameters )
        {
            List<User> rez = new List<User>();
            NextRecordInfo nextRec = new NextRecordInfo() ;
            	do	
				{
                	DataServiceQuery<Users> Qtran = (DataServiceQuery<Users>)servCtx.CreateQuery<Users>(TableName).Where(c => enter query details here );
                   	nextRec = GetNextPage(ref rez, Qtran, nextRec, 0);
            	}
				while (!string.IsNullOrEmpty(nextRec.NextPartition));        
            return rez;
        }
	
	*/
	  
     //Add your extension methods here for  UserContext class.

		public List<User> GetUsers(List<UserLocation> userLocations )
        {
            List<String> ids = userLocations.Select(u => u.UserId).Distinct().ToList<string>();

            List<User> rez = GetAllForPartition("Users").Where(x => ids.Contains(x.UserId)).ToList<User>();
            return rez;
        }


        public List<User> GetOfflineUser(double interval)
        {
            //List<User> rez = new List<User>();

             var rez  = GetAllForPartition("Users");
             rez = rez.Where(c => c.InternalEntity.Timestamp.AddMilliseconds(interval) <= DateTime.UtcNow).ToList<User>();

             //NextRecordInfo nextRec = new NextRecordInfo();
             //do
             //{
             //    DataServiceQuery<Users> Qtran = (DataServiceQuery<Users>)servCtx.CreateQuery<Users>(TableName).Where(c => (c.PartitionKey == "Users"
             //        && c.Timestamp.AddMinutes(interval) <= DateTime.UtcNow));
             //    nextRec = GetNextPage(ref rez, Qtran, nextRec, 0);
             //}
             //while (!string.IsNullOrEmpty(nextRec.NextPartition));
            return rez;


        }
    }    

 }

