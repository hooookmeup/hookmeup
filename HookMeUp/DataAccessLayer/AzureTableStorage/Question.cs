//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Microsoft.WindowsAzure.StorageClient;
using System.Globalization;
using System.IO;
using System.Runtime.Serialization.Json;
using SS.Framework.Common;

namespace SS.DL.AzureTableStorage
{
    public class  Question 
	
    {
    
		 Questions _Questions;
		
		public  Question( Questions Par)
        {
			_Questions = Par;
        }
		public  Question( )
        {
			_Questions = new Questions ();
        }
		
		public string RowKey  
		{
			get 
			{
				return _Questions.RowKey;
			}
		}
        /// <summary>
        /// Gets or sets the CategoryId Property value.
        /// </summary>
        public  string   	CategoryId                { get { return _Questions.PartitionKey; } set { _Questions.PartitionKey = value; } }
        
        /// <summary>
        /// Gets or sets the QuestionId Property value.
        /// </summary>
        public  string   	QuestionId                { get { return _Questions.RowKey; } set { _Questions.RowKey = value; } }
        
        /// <summary>
        /// Gets or sets the SectionName Property value.
        /// </summary>
        public  string   	SectionName               { get { return _Questions.SectionName; } set { _Questions.SectionName = value; } }
        
        /// <summary>
        /// Gets or sets the Options Property value.
        /// </summary>
        public QuestionOptions[] Options
        {
            get
            {
                QuestionOptions[] serv  = null;
                if (!string.IsNullOrEmpty(_Questions.Options))
                {
					MemoryStream ms = new MemoryStream(Encoding.ASCII.GetBytes(_Questions.Options));
    	            DataContractJsonSerializer serializer = new DataContractJsonSerializer(typeof(QuestionOptions[]));
        	        serv = serializer.ReadObject(ms) as QuestionOptions[];
				}
                return serv;
								
            }
            set
            {
			 	if (value != null)
                {
                	 MemoryStream ms = new MemoryStream();
                	/// Serialize to JSON
                	DataContractJsonSerializer serializer = new DataContractJsonSerializer(typeof(QuestionOptions[]));
                	serializer.WriteObject(ms, value);
                	ms.Position = 0;
                	using (StreamReader reader = new StreamReader(ms))
                  	 _Questions.Options = reader.ReadToEnd();
                	ms.Close();
				}
				 else
				   _Questions.Options = null;
            }
        }
        
        /// <summary>
        /// Gets or sets the Name Property value.
        /// </summary>
        public  string   	Name                      { get { return _Questions.Name; } set { _Questions.Name = value; } }
        
        /// <summary>
        /// Gets or sets the InputType Property value.
        /// </summary>
        public  QuestionType	InputType                 {get{ return (QuestionType)Enum.ToObject(typeof(QuestionType), _Questions.InputType); ;} set{ _Questions.InputType=(int) value;}}
        
        /// <summary>
        /// Gets or sets the IsAnswerReq Property value.
        /// </summary>
        public  bool     	IsAnswerReq               { get { return _Questions.IsAnswerReq; } set { _Questions.IsAnswerReq = value; } }
        
        /// <summary>
        /// Gets or sets the Answer Property value.
        /// </summary>
        public  int      	Answer                    { get { return _Questions.Answer; } set { _Questions.Answer = value; } }
        
        /// <summary>
        /// Gets or sets the IsPositive Property value.
        /// </summary>
        public  bool     	IsPositive                { get { return _Questions.IsPositive; } set { _Questions.IsPositive = value; } }
        

		
		public Questions InternalEntity 
		{ get
		  {
			return _Questions;
		  }
		}

    }    

 }
